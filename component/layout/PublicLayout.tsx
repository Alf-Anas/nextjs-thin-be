import { Button, Layout as LayoutANTD, theme } from "antd";
import React, { ReactNode, useEffect, useState } from "react";
import { useRouter } from "next/router";
import { ROUTE } from "@/constant/route";
import Footer from "./Footer";
import HeaderNav from "./HeaderNav";
import Head from "next/head";
import { useIsLoggedIn } from "thin-backend-react";
import { loginWithRedirect, logout } from "thin-backend";

const { Header, Content } = LayoutANTD;

const layoutStyle: React.CSSProperties = {
  minHeight: "100vh",
};

export default function PublicLayout({ children }: Props) {
  const router = useRouter();
  const {
    token: { colorBgContainer },
  } = theme.useToken();

  const isLoggedIn = useIsLoggedIn();
  const [isLoading, setIsLoading] = useState(false);

  async function doLogin() {
    setIsLoading(true);
    await loginWithRedirect();
    setIsLoading(false);
  }

  async function doLogout() {
    setIsLoading(true);
    await logout({
      redirect: window.location.href.split("?")[0],
    });
    setIsLoading(false);
  }

  // Refresh page after login
  useEffect(() => {
    if (router.query?.userId && router.query?.accessToken) {
      setTimeout(() => {
        const jwt = localStorage.getItem("ihp_jwt");
        if (jwt) {
          window.location.href = window.location.href.split("?")[0];
        }
      }, 850);
    }
  }, [router]);

  return (
    <>
      <Head>
        <title>Super Marketplace</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <LayoutANTD style={layoutStyle}>
        <Header style={{ paddingInline: "16px" }}>
          <div style={{ display: "flex" }}>
            <div
              className="logo"
              style={{
                width: "10rem",
                textAlign: "center",
                fontWeight: "bold",
                cursor: "pointer",
              }}
              onClick={(e) => {
                e.preventDefault();
                router.push(ROUTE.HOME.URL);
              }}
            >
              <span
                style={{
                  backgroundColor: "whitesmoke",
                  padding: "12px 50px",
                  opacity: "65%",
                }}
              >
                LOGO
              </span>
            </div>
            <HeaderNav />
            {!isLoggedIn && isLoggedIn !== null && (
              <Button
                type="primary"
                onClick={doLogin}
                disabled={isLoading}
                style={{ margin: "auto" }}
              >
                Login
              </Button>
            )}
            {isLoggedIn && (
              <Button
                type="primary"
                onClick={doLogout}
                disabled={isLoading}
                style={{ margin: "auto" }}
                danger
              >
                Logout
              </Button>
            )}
          </div>
        </Header>
        <Content
          style={{
            padding: 24,
            margin: 0,
            minHeight: 280,
            background: colorBgContainer,
          }}
        >
          {children}
        </Content>
        <Footer />
      </LayoutANTD>
    </>
  );
}

interface Props {
  children?: ReactNode;
}
